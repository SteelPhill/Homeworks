// <auto-generated />
using System;
using C_Sharp_SQL_HW2.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace C_Sharp_SQL_HW2.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241222080134_Initailization")]
    partial class Initailization
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("C_Sharp_SQL_HW2.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProductSupplierId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductSupplierId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products", t =>
                        {
                            t.HasCheckConstraint("CK_Products_Count", "Count > 0");

                            t.HasCheckConstraint("CK_Products_Name", "LEN(Name) > 0");

                            t.HasCheckConstraint("CK_Products_Price", "Price > 0");
                        });
                });

            modelBuilder.Entity("C_Sharp_SQL_HW2.Entities.ProductSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductSuppliers", t =>
                        {
                            t.HasCheckConstraint("CK_ProductSuppliers_Name", "LEN(Name) > 0");
                        });
                });

            modelBuilder.Entity("C_Sharp_SQL_HW2.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes", t =>
                        {
                            t.HasCheckConstraint("CK_ProductTypes_Name", "LEN(Name) > 0");
                        });
                });

            modelBuilder.Entity("C_Sharp_SQL_HW2.Entities.Product", b =>
                {
                    b.HasOne("C_Sharp_SQL_HW2.Entities.ProductSupplier", "ProductSupplier")
                        .WithMany("Products")
                        .HasForeignKey("ProductSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("C_Sharp_SQL_HW2.Entities.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductSupplier");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("C_Sharp_SQL_HW2.Entities.ProductSupplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("C_Sharp_SQL_HW2.Entities.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
