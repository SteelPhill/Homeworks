// <auto-generated />
using C_Sharp_SQL_HW1.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace C_Sharp_SQL_HW1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241220160224_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("C_Sharp_SQL_HW1.Entities.Fruit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fruits", t =>
                        {
                            t.HasCheckConstraint("CK_Fruits_Calories", "Calories > 0");

                            t.HasCheckConstraint("CK_Fruits_Color", "LEN(Color) > 0");

                            t.HasCheckConstraint("CK_Fruits_Name", "LEN(Name) > 0");

                            t.HasCheckConstraint("CK_Fruits_Type", "Type = 0 OR Type = 1");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
